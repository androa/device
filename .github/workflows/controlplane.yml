name: Controlplane
on:
  push:
    paths:
      - 'Makefile'
      - 'go.mod'
      - '**.go'
      - '.github/workflows/controlplane.yml'
      - 'packaging/controlplane/**'
env:
  go_version: '1.17'
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11.7
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5433:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: ${{ env.go_version }}
    - name: run tests
      run: |
        #sudo apt update
        #sudo apt install --yes build-essential libgtk-3-dev libappindicator3-dev
        make run-integration-test

  build:
    needs:
    - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.go_version }}

      - name: 'Install fpm+dependencies'
        run: |
          sudo gem install --no-document fpm -v 1.13.1

      - name: 'Build controlplane'
        run: make controlplane-debs

      - name: 'Auth with Google'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GOOGLE_DEB_UPLOAD_SA_JSON }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'

      - name: 'Upload controlplane deb files to repository'
        run: |
          for component in \
            "bootstrap-api" \
            "apiserver" \
            "gateway-agent" \
            "prometheus-agent" \
            ; do
            gcloud beta artifacts apt upload --project=naisdevice naisdevice \
              --source "$component*.deb"
          done